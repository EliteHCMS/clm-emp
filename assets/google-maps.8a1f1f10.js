var ee=Object.defineProperty,te=Object.defineProperties;var se=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var Z=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var R=(s,t,e)=>t in s?ee(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,c=(s,t)=>{for(var e in t||(t={}))Z.call(t,e)&&R(s,e,t[e]);if(w)for(var e of w(t))N.call(t,e)&&R(s,e,t[e]);return s},C=(s,t)=>te(s,se(t));var L=(s,t)=>{var e={};for(var r in s)Z.call(s,r)&&t.indexOf(r)<0&&(e[r]=s[r]);if(s!=null&&w)for(var r of w(s))t.indexOf(r)<0&&N.call(s,r)&&(e[r]=s[r]);return e};import{_ as b,n as $,p as M,q as v,s as D,t as re,u as ie,v as oe,x as ne,y as H,f as ae}from"./index.522e4dc0.js";var G=s=>{let t=!1,e;return()=>(t||(t=!0,e=s()),e)};class E{static isServer(){return typeof document=="undefined"}}function le(s){const t=document.createElement("SCRIPT");if(typeof s!="object")throw new Error("options should  be an object");Array.prototype.isPrototypeOf(s.libraries)&&(s.libraries=s.libraries.join(",")),s.callback="vueGoogleMapsInit";let r="https://maps.googleapis.com/maps/api/js?"+Object.keys(s).map(o=>encodeURIComponent(o)+"="+encodeURIComponent(s[o])).join("&");return t.setAttribute("src",r),t.setAttribute("async",""),t.setAttribute("defer",""),t}let F=!1;function ce(s){if(!E.isServer()){if(F)throw new Error("You already started the loading of google maps");{F=!0;const t=le(s);document.head.appendChild(t)}}}var X=(s,t,e)=>{for(let r of e){const o=`on${r.charAt(0).toUpperCase()}${r.slice(1)}`.replace(/[-_]+(.)?/g,(i,n)=>n?n.toUpperCase():"");s.$props[o]||s.$attrs[o]?t.addListener(r,i=>{s.$emit(r,i)}):(s.$gmapOptions.autobindAllEvents||s.$attrs[r])&&t.addListener(r,i=>{s.$emit(r,i)})}};function Y(s,t,e,r=!1){let o=!1;function i(){o||(o=!0,s.$nextTick(()=>{o=!1,e()}))}for(let n of t)s.$watch(n,i,{immediate:r})}class U{static capitalizeFirstLetter(t){return t.charAt(0).toUpperCase()+t.slice(1)}}function P(s,t){return Object.keys(t).reduce((e,r)=>(s[r]!==void 0&&(e[r]=s[r]),e),{})}function A(s,t,e){for(let r in e){let{twoWay:o,type:i,trackProperties:n,noBind:a}=e[r];if(a)continue;const l="set"+U.capitalizeFirstLetter(r),m="get"+U.capitalizeFirstLetter(r),p=r.toLowerCase()+"_changed",u=s[r];if(typeof t[l]=="undefined")throw new Error(`${l} is not a method of (the Maps object corresponding to) ${s.$options._componentTag}`);i!==Object||!n?s.$watch(r,()=>{const d=s[r];t[l](d)},{immediate:typeof u!="undefined",deep:i===Object}):Y(s,n.map(d=>`${r}.${d}`),()=>{t[l](s[r])},s[r]!==void 0),o&&(s.$gmapOptions.autobindAllEvents||s.$attrs[p])&&t.addListener(p,()=>{s.$emit(p,t[m]())})}}var ue={inject:{$mapPromise:{default:"abcdef"}},provide(){return this.$mapPromise.then(s=>{this.$map=s}),{}}};function g(s){const d=s,{mappedProps:t,name:e,ctr:r,ctrArgs:o,events:i,beforeCreate:n,afterCreate:a,props:l}=d,m=L(d,["mappedProps","name","ctr","ctrArgs","events","beforeCreate","afterCreate","props"]),p=`$${e}Promise`,u=`$${e}Object`;return pe(!(m.props instanceof Array),"`props` should be an object, not Array"),c(C(c({},typeof GENERATE_DOC!="undefined"?{$vgmOptions:s}:{}),{mixins:[ue],props:c(c({},l),I(t)),render(){return""},provide(){const W=this.$mapPromise.then(y=>{this.$map=y;const f=c(C(c({},this.options),{map:y}),P(this,t));if(delete f.options,n){const T=n.bind(this)(f);if(T instanceof Promise)return T.then(()=>({options:f}))}return{options:f}}).then(({options:y})=>{const f=r();return this[u]=o?new(Function.prototype.bind.call(f,null,...o(y,P(this,l||{})))):new f(y),A(this,this[u],t),X(this,this[u],i),a&&a.bind(this)(this[u]),this[u]});return this[p]=W,{[p]:W}},unmounted(){this[u]&&this[u].setMap&&this[u].setMap(null)}}),m)}function pe(s,t){if(!s)throw new Error(t)}function I(s){return Object.entries(s).map(([t,e])=>{const r={};return"type"in e&&(r.type=e.type),"default"in e&&(r.default=e.default),"required"in e&&(r.required=e.required),[t,r]}).reduce((t,[e,r])=>(t[e]=r,t),{})}const he={draggable:{type:Boolean},editable:{type:Boolean},options:{twoWay:!1,type:Object},path:{type:Array,twoWay:!0}},de=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"];var me=g({mappedProps:he,props:{deepWatch:{type:Boolean,default:!1}},events:de,name:"polyline",ctr:()=>google.maps.Polyline,afterCreate(){let s=()=>{};this.$watch("path",t=>{if(t){s(),this.$polylineObject.setPath(t);const e=this.$polylineObject.getPath(),r=[],o=()=>{this.$emit("path_changed",this.$polylineObject.getPath())};r.push([e,e.addListener("insert_at",o)]),r.push([e,e.addListener("remove_at",o)]),r.push([e,e.addListener("set_at",o)]),s=()=>{r.map(([i,n])=>google.maps.event.removeListener(n))}}},{deep:this.deepWatch,immediate:!0})}});const ge={draggable:{type:Boolean},editable:{type:Boolean},options:{type:Object},path:{type:Array,twoWay:!0,noBind:!0},paths:{type:Array,twoWay:!0,noBind:!0}},fe=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"];var _e=g({props:{deepWatch:{type:Boolean,default:!1}},events:fe,mappedProps:ge,name:"polygon",ctr:()=>google.maps.Polygon,beforeCreate(s){s.path||delete s.path,s.paths||delete s.paths},afterCreate(s){let t=()=>{};this.$watch("paths",e=>{if(e){t(),s.setPaths(e);const r=()=>{this.$emit("paths_changed",s.getPaths())},o=[],i=s.getPaths();for(let n=0;n<i.getLength();n++){let a=i.getAt(n);o.push([a,a.addListener("insert_at",r)]),o.push([a,a.addListener("remove_at",r)]),o.push([a,a.addListener("set_at",r)])}o.push([i,i.addListener("insert_at",r)]),o.push([i,i.addListener("remove_at",r)]),o.push([i,i.addListener("set_at",r)]),t=()=>{o.map(([n,a])=>google.maps.event.removeListener(a))}}},{deep:this.deepWatch,immediate:!0}),this.$watch("path",e=>{if(e){t(),s.setPaths(e);const r=s.getPath(),o=[],i=()=>{this.$emit("path_changed",s.getPath())};o.push([r,r.addListener("insert_at",i)]),o.push([r,r.addListener("remove_at",i)]),o.push([r,r.addListener("set_at",i)]),t=()=>{o.map(([n,a])=>google.maps.event.removeListener(a))}}},{deep:this.deepWatch,immediate:!0})}});const ye={center:{type:Object,twoWay:!0,required:!0},radius:{type:Number,twoWay:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},options:{type:Object,twoWay:!1}},ve=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"];var be=g({mappedProps:ye,name:"circle",ctr:()=>google.maps.Circle,events:ve});const $e={bounds:{type:Object,twoWay:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},options:{type:Object,twoWay:!1}},Me=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"];var we=g({mappedProps:$e,name:"rectangle",ctr:()=>google.maps.Rectangle,events:Me});const Ce={animation:{twoWay:!0,type:Number},attribution:{type:Object},clickable:{type:Boolean,twoWay:!0,default:!0},cursor:{type:String,twoWay:!0},draggable:{type:Boolean,twoWay:!0,default:!1},icon:{twoWay:!0},label:{},opacity:{type:Number,default:1},options:{type:Object},place:{type:Object},position:{type:Object,twoWay:!0},shape:{type:Object,twoWay:!0},title:{type:String,twoWay:!0},zIndex:{type:Number,twoWay:!0},visible:{twoWay:!0,default:!0}},z=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],ke=g({mappedProps:Ce,events:z,name:"marker",ctr:()=>google.maps.Marker,inject:{$clusterPromise:{default:null}},emits:z,unmounted(){!this.$markerObject||(this.$clusterObject?this.$clusterObject.removeMarker(this.$markerObject,!0):this.$markerObject.setMap(null))},beforeCreate(s){return this.$clusterPromise&&(s.map=null),this.$clusterPromise},afterCreate(s){z.forEach(t=>{s.addListener(t,e=>{this.$emit(t,e)})}),this.$clusterPromise&&this.$clusterPromise.then(t=>{this.$clusterObject=t,t.addMarker(s)})}});function Pe(s,t,e,r,o,i){return $(),M("div",{onClick:t[0]||(t[0]=()=>{s.console.log("sdfsd")})},[v(s.$slots,"default")])}var Le=b(ke,[["render",Pe]]);/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var B=function(s,t){return B=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var o in r)r.hasOwnProperty(o)&&(e[o]=r[o])},B(s,t)};function J(s,t){B(s,t);function e(){this.constructor=s}s.prototype=t===null?Object.create(t):(e.prototype=t.prototype,new e)}var _=function(){return _=Object.assign||function(t){for(var e,r=1,o=arguments.length;r<o;r++){e=arguments[r];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},_.apply(this,arguments)};function ze(s,t){for(var e in t.prototype)s.prototype[e]=t.prototype[e]}var K=function(){function s(){ze(s,google.maps.OverlayView)}return s}();function O(s){return Object.keys(s).reduce(function(t,e){return s[e]&&t.push(e+":"+s[e]),t},[]).join(";")}function h(s){return s?s+"px":void 0}var Oe=function(s){J(t,s);function t(e,r){var o=s.call(this)||this;return o.cluster_=e,o.styles_=r,o.center_=null,o.div_=null,o.sums_=null,o.visible_=!1,o.style=null,o.setMap(e.getMap()),o}return t.prototype.onAdd=function(){var e=this,r,o,i=this.cluster_.getMarkerClusterer(),n=google.maps.version.split("."),a=n[0],l=n[1],m=parseInt(a,10)*100+parseInt(l,10);this.div_=document.createElement("div"),this.visible_&&this.show(),this.getPanes().overlayMouseTarget.appendChild(this.div_),this.boundsChangedListener_=google.maps.event.addListener(this.getMap(),"bounds_changed",function(){o=r}),google.maps.event.addDomListener(this.div_,"mousedown",function(){r=!0,o=!1}),google.maps.event.addDomListener(this.div_,"contextmenu",function(){google.maps.event.trigger(i,"contextmenu",e.cluster_)}),m>=332&&google.maps.event.addDomListener(this.div_,"touchstart",function(p){p.stopPropagation()}),google.maps.event.addDomListener(this.div_,"click",function(p){if(r=!1,!o){if(google.maps.event.trigger(i,"click",e.cluster_),google.maps.event.trigger(i,"clusterclick",e.cluster_),i.getZoomOnClick()){var u=i.getMaxZoom(),d=e.cluster_.getBounds();i.getMap().fitBounds(d),setTimeout(function(){i.getMap().fitBounds(d),u!==null&&i.getMap().getZoom()>u&&i.getMap().setZoom(u+1)},100)}p.cancelBubble=!0,p.stopPropagation&&p.stopPropagation()}}),google.maps.event.addDomListener(this.div_,"mouseover",function(){google.maps.event.trigger(i,"mouseover",e.cluster_)}),google.maps.event.addDomListener(this.div_,"mouseout",function(){google.maps.event.trigger(i,"mouseout",e.cluster_)})},t.prototype.onRemove=function(){this.div_&&this.div_.parentNode&&(this.hide(),google.maps.event.removeListener(this.boundsChangedListener_),google.maps.event.clearInstanceListeners(this.div_),this.div_.parentNode.removeChild(this.div_),this.div_=null)},t.prototype.draw=function(){if(this.visible_){var e=this.getPosFromLatLng_(this.center_);this.div_.style.top=e.y+"px",this.div_.style.left=e.x+"px"}},t.prototype.hide=function(){this.div_&&(this.div_.style.display="none"),this.visible_=!1},t.prototype.show=function(){this.div_&&(this.div_.className=this.className_,this.div_.style.cssText=this.createCss_(this.getPosFromLatLng_(this.center_)),this.div_.innerHTML=(this.style.url?this.getImageElementHtml():"")+this.getLabelDivHtml(),typeof this.sums_.title=="undefined"||this.sums_.title===""?this.div_.title=this.cluster_.getMarkerClusterer().getTitle():this.div_.title=this.sums_.title,this.div_.style.display=""),this.visible_=!0},t.prototype.getLabelDivHtml=function(){var e=this.cluster_.getMarkerClusterer(),r=e.ariaLabelFn(this.sums_.text),o={position:"absolute",top:h(this.anchorText_[0]),left:h(this.anchorText_[1]),color:this.style.textColor,"font-size":h(this.style.textSize),"font-family":this.style.fontFamily,"font-weight":this.style.fontWeight,"font-style":this.style.fontStyle,"text-decoration":this.style.textDecoration,"text-align":"center",width:h(this.style.width),"line-height":h(this.style.textLineHeight)};return`
<div aria-label="`.concat(r,'" style="').concat(O(o),`" tabindex="0">
  <span aria-hidden="true">`).concat(this.sums_.text,`</span>
</div>
`)},t.prototype.getImageElementHtml=function(){var e=(this.style.backgroundPosition||"0 0").split(" "),r=parseInt(e[0].replace(/^\s+|\s+$/g,""),10),o=parseInt(e[1].replace(/^\s+|\s+$/g,""),10),i={};if(this.cluster_.getMarkerClusterer().getEnableRetinaIcons())i={width:h(this.style.width),height:h(this.style.height)};else{var n=[-1*o,-1*r+this.style.width,-1*o+this.style.height,-1*r],a=n[0],l=n[1],m=n[2],p=n[3];i={clip:"rect(".concat(a,"px, ").concat(l,"px, ").concat(m,"px, ").concat(p,"px)")}}var u=this.sums_.url?{width:"100%",height:"100%"}:{},d=O(_(_({position:"absolute",top:h(o),left:h(r)},i),u));return'<img alt="'.concat(this.sums_.text,'" aria-hidden="true" src="').concat(this.style.url,'" style="').concat(d,'"/>')},t.prototype.useStyle=function(e){this.sums_=e;var r=Math.max(0,e.index-1);r=Math.min(this.styles_.length-1,r),this.style=this.sums_.url?_(_({},this.styles_[r]),{url:this.sums_.url}):this.styles_[r],this.anchorText_=this.style.anchorText||[0,0],this.anchorIcon_=this.style.anchorIcon||[Math.floor(this.style.height/2),Math.floor(this.style.width/2)],this.className_=this.cluster_.getMarkerClusterer().getClusterClass()+" "+(this.style.className||"cluster-"+r)},t.prototype.setCenter=function(e){this.center_=e},t.prototype.createCss_=function(e){return O({"z-index":"".concat(this.cluster_.getMarkerClusterer().getZIndex()),top:h(e.y),left:h(e.x),width:h(this.style.width),height:h(this.style.height),cursor:"pointer",position:"absolute","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-o-user-select":"none","user-select":"none"})},t.prototype.getPosFromLatLng_=function(e){var r=this.getProjection().fromLatLngToDivPixel(e);return r.x=Math.floor(r.x-this.anchorIcon_[1]),r.y=Math.floor(r.y-this.anchorIcon_[0]),r},t}(K),Se=function(){function s(t){this.markerClusterer_=t,this.map_=this.markerClusterer_.getMap(),this.minClusterSize_=this.markerClusterer_.getMinimumClusterSize(),this.averageCenter_=this.markerClusterer_.getAverageCenter(),this.markers_=[],this.center_=null,this.bounds_=null,this.clusterIcon_=new Oe(this,this.markerClusterer_.getStyles())}return s.prototype.getSize=function(){return this.markers_.length},s.prototype.getMarkers=function(){return this.markers_},s.prototype.getCenter=function(){return this.center_},s.prototype.getMap=function(){return this.map_},s.prototype.getMarkerClusterer=function(){return this.markerClusterer_},s.prototype.getBounds=function(){for(var t=new google.maps.LatLngBounds(this.center_,this.center_),e=this.getMarkers(),r=0;r<e.length;r++)t.extend(e[r].getPosition());return t},s.prototype.remove=function(){this.clusterIcon_.setMap(null),this.markers_=[],delete this.markers_},s.prototype.addMarker=function(t){if(this.isMarkerAlreadyAdded_(t))return!1;if(!this.center_)this.center_=t.getPosition(),this.calculateBounds_();else if(this.averageCenter_){var e=this.markers_.length+1,r=(this.center_.lat()*(e-1)+t.getPosition().lat())/e,o=(this.center_.lng()*(e-1)+t.getPosition().lng())/e;this.center_=new google.maps.LatLng(r,o),this.calculateBounds_()}t.isAdded=!0,this.markers_.push(t);var i=this.markers_.length,n=this.markerClusterer_.getMaxZoom();if(n!==null&&this.map_.getZoom()>n)t.getMap()!==this.map_&&t.setMap(this.map_);else if(i<this.minClusterSize_)t.getMap()!==this.map_&&t.setMap(this.map_);else if(i===this.minClusterSize_)for(var a=0;a<i;a++)this.markers_[a].setMap(null);else t.setMap(null);return!0},s.prototype.isMarkerInClusterBounds=function(t){return this.bounds_.contains(t.getPosition())},s.prototype.calculateBounds_=function(){var t=new google.maps.LatLngBounds(this.center_,this.center_);this.bounds_=this.markerClusterer_.getExtendedBounds(t)},s.prototype.updateIcon=function(){var t=this.markers_.length,e=this.markerClusterer_.getMaxZoom();if(e!==null&&this.map_.getZoom()>e){this.clusterIcon_.hide();return}if(t<this.minClusterSize_){this.clusterIcon_.hide();return}var r=this.markerClusterer_.getStyles().length,o=this.markerClusterer_.getCalculator()(this.markers_,r);this.clusterIcon_.setCenter(this.center_),this.clusterIcon_.useStyle(o),this.clusterIcon_.show()},s.prototype.isMarkerAlreadyAdded_=function(t){if(this.markers_.indexOf)return this.markers_.indexOf(t)!==-1;for(var e=0;e<this.markers_.length;e++)if(t===this.markers_[e])return!0;return!1},s}(),k=function(s,t,e){return s[t]!==void 0?s[t]:e},q=function(s){J(t,s);function t(e,r,o){r===void 0&&(r=[]),o===void 0&&(o={});var i=s.call(this)||this;return i.options=o,i.markers_=[],i.clusters_=[],i.listeners_=[],i.activeMap_=null,i.ready_=!1,i.ariaLabelFn=i.options.ariaLabelFn||function(){return""},i.zIndex_=i.options.zIndex||Number(google.maps.Marker.MAX_ZINDEX)+1,i.gridSize_=i.options.gridSize||60,i.minClusterSize_=i.options.minimumClusterSize||2,i.maxZoom_=i.options.maxZoom||null,i.styles_=i.options.styles||[],i.title_=i.options.title||"",i.zoomOnClick_=k(i.options,"zoomOnClick",!0),i.averageCenter_=k(i.options,"averageCenter",!1),i.ignoreHidden_=k(i.options,"ignoreHidden",!1),i.enableRetinaIcons_=k(i.options,"enableRetinaIcons",!1),i.imagePath_=i.options.imagePath||t.IMAGE_PATH,i.imageExtension_=i.options.imageExtension||t.IMAGE_EXTENSION,i.imageSizes_=i.options.imageSizes||t.IMAGE_SIZES,i.calculator_=i.options.calculator||t.CALCULATOR,i.batchSize_=i.options.batchSize||t.BATCH_SIZE,i.batchSizeIE_=i.options.batchSizeIE||t.BATCH_SIZE_IE,i.clusterClass_=i.options.clusterClass||"cluster",navigator.userAgent.toLowerCase().indexOf("msie")!==-1&&(i.batchSize_=i.batchSizeIE_),i.setupStyles_(),i.addMarkers(r,!0),i.setMap(e),i}return t.prototype.onAdd=function(){var e=this;this.activeMap_=this.getMap(),this.ready_=!0,this.repaint(),this.prevZoom_=this.getMap().getZoom(),this.listeners_=[google.maps.event.addListener(this.getMap(),"zoom_changed",function(){var r=e.getMap(),o=r.minZoom||0,i=Math.min(r.maxZoom||100,r.mapTypes[r.getMapTypeId()].maxZoom),n=Math.min(Math.max(e.getMap().getZoom(),o),i);e.prevZoom_!=n&&(e.prevZoom_=n,e.resetViewport_(!1))}),google.maps.event.addListener(this.getMap(),"idle",function(){e.redraw_()})]},t.prototype.onRemove=function(){for(var e=0;e<this.markers_.length;e++)this.markers_[e].getMap()!==this.activeMap_&&this.markers_[e].setMap(this.activeMap_);for(var e=0;e<this.clusters_.length;e++)this.clusters_[e].remove();this.clusters_=[];for(var e=0;e<this.listeners_.length;e++)google.maps.event.removeListener(this.listeners_[e]);this.listeners_=[],this.activeMap_=null,this.ready_=!1},t.prototype.draw=function(){},t.prototype.setupStyles_=function(){if(!(this.styles_.length>0))for(var e=0;e<this.imageSizes_.length;e++){var r=this.imageSizes_[e];this.styles_.push(t.withDefaultStyle({url:this.imagePath_+(e+1)+"."+this.imageExtension_,height:r,width:r}))}},t.prototype.fitMapToMarkers=function(e){for(var r=this.getMarkers(),o=new google.maps.LatLngBounds,i=0;i<r.length;i++)(r[i].getVisible()||!this.getIgnoreHidden())&&o.extend(r[i].getPosition());this.getMap().fitBounds(o,e)},t.prototype.getGridSize=function(){return this.gridSize_},t.prototype.setGridSize=function(e){this.gridSize_=e},t.prototype.getMinimumClusterSize=function(){return this.minClusterSize_},t.prototype.setMinimumClusterSize=function(e){this.minClusterSize_=e},t.prototype.getMaxZoom=function(){return this.maxZoom_},t.prototype.setMaxZoom=function(e){this.maxZoom_=e},t.prototype.getZIndex=function(){return this.zIndex_},t.prototype.setZIndex=function(e){this.zIndex_=e},t.prototype.getStyles=function(){return this.styles_},t.prototype.setStyles=function(e){this.styles_=e},t.prototype.getTitle=function(){return this.title_},t.prototype.setTitle=function(e){this.title_=e},t.prototype.getZoomOnClick=function(){return this.zoomOnClick_},t.prototype.setZoomOnClick=function(e){this.zoomOnClick_=e},t.prototype.getAverageCenter=function(){return this.averageCenter_},t.prototype.setAverageCenter=function(e){this.averageCenter_=e},t.prototype.getIgnoreHidden=function(){return this.ignoreHidden_},t.prototype.setIgnoreHidden=function(e){this.ignoreHidden_=e},t.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons_},t.prototype.setEnableRetinaIcons=function(e){this.enableRetinaIcons_=e},t.prototype.getImageExtension=function(){return this.imageExtension_},t.prototype.setImageExtension=function(e){this.imageExtension_=e},t.prototype.getImagePath=function(){return this.imagePath_},t.prototype.setImagePath=function(e){this.imagePath_=e},t.prototype.getImageSizes=function(){return this.imageSizes_},t.prototype.setImageSizes=function(e){this.imageSizes_=e},t.prototype.getCalculator=function(){return this.calculator_},t.prototype.setCalculator=function(e){this.calculator_=e},t.prototype.getBatchSizeIE=function(){return this.batchSizeIE_},t.prototype.setBatchSizeIE=function(e){this.batchSizeIE_=e},t.prototype.getClusterClass=function(){return this.clusterClass_},t.prototype.setClusterClass=function(e){this.clusterClass_=e},t.prototype.getMarkers=function(){return this.markers_},t.prototype.getTotalMarkers=function(){return this.markers_.length},t.prototype.getClusters=function(){return this.clusters_},t.prototype.getTotalClusters=function(){return this.clusters_.length},t.prototype.addMarker=function(e,r){this.pushMarkerTo_(e),r||this.redraw_()},t.prototype.addMarkers=function(e,r){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&this.pushMarkerTo_(e[o]);r||this.redraw_()},t.prototype.pushMarkerTo_=function(e){var r=this;e.getDraggable()&&google.maps.event.addListener(e,"dragend",function(){r.ready_&&(e.isAdded=!1,r.repaint())}),e.isAdded=!1,this.markers_.push(e)},t.prototype.removeMarker=function(e,r){var o=this.removeMarker_(e);return!r&&o&&this.repaint(),o},t.prototype.removeMarkers=function(e,r){for(var o=!1,i=0;i<e.length;i++){var n=this.removeMarker_(e[i]);o=o||n}return!r&&o&&this.repaint(),o},t.prototype.removeMarker_=function(e){var r=-1;if(this.markers_.indexOf)r=this.markers_.indexOf(e);else for(var o=0;o<this.markers_.length;o++)if(e===this.markers_[o]){r=o;break}return r===-1?!1:(e.setMap(null),this.markers_.splice(r,1),!0)},t.prototype.clearMarkers=function(){this.resetViewport_(!0),this.markers_=[]},t.prototype.repaint=function(){var e=this.clusters_.slice();this.clusters_=[],this.resetViewport_(!1),this.redraw_(),setTimeout(function(){for(var r=0;r<e.length;r++)e[r].remove()},0)},t.prototype.getExtendedBounds=function(e){var r=this.getProjection(),o=new google.maps.LatLng(e.getNorthEast().lat(),e.getNorthEast().lng()),i=new google.maps.LatLng(e.getSouthWest().lat(),e.getSouthWest().lng()),n=r.fromLatLngToDivPixel(o);n.x+=this.gridSize_,n.y-=this.gridSize_;var a=r.fromLatLngToDivPixel(i);a.x-=this.gridSize_,a.y+=this.gridSize_;var l=r.fromDivPixelToLatLng(n),m=r.fromDivPixelToLatLng(a);return e.extend(l),e.extend(m),e},t.prototype.redraw_=function(){this.createClusters_(0)},t.prototype.resetViewport_=function(e){for(var r=0;r<this.clusters_.length;r++)this.clusters_[r].remove();this.clusters_=[];for(var r=0;r<this.markers_.length;r++){var o=this.markers_[r];o.isAdded=!1,e&&o.setMap(null)}},t.prototype.distanceBetweenPoints_=function(e,r){var o=6371,i=(r.lat()-e.lat())*Math.PI/180,n=(r.lng()-e.lng())*Math.PI/180,a=Math.sin(i/2)*Math.sin(i/2)+Math.cos(e.lat()*Math.PI/180)*Math.cos(r.lat()*Math.PI/180)*Math.sin(n/2)*Math.sin(n/2),l=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return o*l},t.prototype.isMarkerInBounds_=function(e,r){return r.contains(e.getPosition())},t.prototype.addToClosestCluster_=function(e){for(var r=4e4,o=null,i=0;i<this.clusters_.length;i++){var n=this.clusters_[i],a=n.getCenter();if(a){var l=this.distanceBetweenPoints_(a,e.getPosition());l<r&&(r=l,o=n)}}if(o&&o.isMarkerInClusterBounds(e))o.addMarker(e);else{var n=new Se(this);n.addMarker(e),this.clusters_.push(n)}},t.prototype.createClusters_=function(e){var r=this;if(!!this.ready_){e===0&&(google.maps.event.trigger(this,"clusteringbegin",this),typeof this.timerRefStatic!="undefined"&&(clearTimeout(this.timerRefStatic),delete this.timerRefStatic));for(var o=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast()),i=this.getExtendedBounds(o),n=Math.min(e+this.batchSize_,this.markers_.length),a=e;a<n;a++){var l=this.markers_[a];!l.isAdded&&this.isMarkerInBounds_(l,i)&&(!this.ignoreHidden_||this.ignoreHidden_&&l.getVisible())&&this.addToClosestCluster_(l)}if(n<this.markers_.length)this.timerRefStatic=window.setTimeout(function(){r.createClusters_(n)},0);else{delete this.timerRefStatic,google.maps.event.trigger(this,"clusteringend",this);for(var a=0;a<this.clusters_.length;a++)this.clusters_[a].updateIcon()}}},t.CALCULATOR=function(e,r){for(var o=0,i=e.length,n=i;n!==0;)n=Math.floor(n/10),o++;return o=Math.min(o,r),{text:i.toString(),index:o,title:""}},t.withDefaultStyle=function(e){return _({textColor:"black",textSize:11,textDecoration:"none",textLineHeight:e.height,fontWeight:"bold",fontStyle:"normal",fontFamily:"Arial,sans-serif",backgroundPosition:"0 0"},e)},t.BATCH_SIZE=2e3,t.BATCH_SIZE_IE=500,t.IMAGE_PATH="../images/m",t.IMAGE_EXTENSION="png",t.IMAGE_SIZES=[53,56,66,78,90],t}(K);const S={maxZoom:{type:Number,twoWay:!1},batchSizeIE:{type:Number,twoWay:!1},calculator:{type:Function,twoWay:!1},enableRetinaIcons:{type:Boolean,twoWay:!1},gridSize:{type:Number,twoWay:!1},ignoreHidden:{type:Boolean,twoWay:!1},imageExtension:{type:String,twoWay:!1},imagePath:{type:String,twoWay:!1},imageSizes:{type:Array,twoWay:!1},minimumClusterSize:{type:Number,twoWay:!1},styles:{type:Array,twoWay:!1},zoomOnClick:{type:Boolean,twoWay:!1}},xe=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],je=g({mappedProps:S,events:xe,name:"cluster",ctr:()=>{if(typeof q=="undefined"){const s="MarkerClusterer is not installed!";throw console.error(s),new Error(s)}return q},ctrArgs:e=>{var r=e,{map:s}=r,t=L(r,["map"]);return[s,[],t]},afterCreate(s){const t=()=>{const e=s.getMarkers();s.clearMarkers(),s.addMarkers(e)};for(let e in S)S[e].twoWay&&this.$on(e.toLowerCase()+"_changed",t)},updated(){this.$clusterObject&&this.$clusterObject.repaint()},beforeUnmount(){this.$children&&this.$children.length&&this.$children.forEach(s=>{s.$clusterObject===this.$clusterObject&&(s.$clusterObject=null)}),this.$clusterObject&&this.$clusterObject.clearMarkers()}});function Ee(s,t,e,r,o,i){return $(),M("div",null,[v(s.$slots,"default")])}var Be=b(je,[["render",Ee]]);const Ae={options:{type:Object,required:!1,default(){return{}}},position:{type:Object,twoWay:!0},zIndex:{type:Number,twoWay:!0}},Ie=["domready","click","closeclick","content_changed"],We=g({mappedProps:Ae,events:Ie,name:"infoWindow",ctr:()=>google.maps.InfoWindow,props:{opened:{type:Boolean,default:!0}},inject:{$markerPromise:{default:null}},mounted(){const s=this.$refs.infoWindow;s.parentNode.removeChild(s)},beforeCreate(s){if(s.content=this.$refs.infoWindow,this.$markerPromise)return delete s.position,this.$markerPromise.then(t=>(this.$markerObject=t,t))},emits:["closeclick"],methods:{_openInfoWindow(){this.$infoWindowObject.close(),this.opened?this.$infoWindowObject.open(this.$map,this.$markerObject):this.$emit("closeclick")}},afterCreate(){this._openInfoWindow(),this.$watch("opened",()=>{this._openInfoWindow()})}}),Te={ref:"infoWindow"};function Re(s,t,e,r,o,i){return $(),M("div",Te,[v(s.$slots,"default")],512)}var Ze=b(We,[["render",Re]]),Ne={props:["resizeBus"],data(){return{_actualResizeBus:null}},created(){typeof this.resizeBus=="undefined"?this.$data._actualResizeBus=this.$gmapDefaultResizeBus:this.$data._actualResizeBus=this.resizeBus},methods:{_resizeCallback(){this.resize()},isFunction(s){return s&&{}.toString.call(s)==="[object Function]"},_delayedResizeCallback(){this.$nextTick(()=>this._resizeCallback())}},watch:{resizeBus(s){this.$data._actualResizeBus=s},"$data._actualResizeBus"(s,t){t&&t.$off("resize",this._delayedResizeCallback)}},unmounted(){this.$data._actualResizeBus&&this.isFunction(this.$data._actualResizeBus.$off)&&this.$data._actualResizeBus.$off("resize",this._delayedResizeCallback)}};function De(s){let t=0;s(()=>{t+=1},()=>{t=Math.max(0,t-1)},()=>t===0)}const x={center:{required:!0,twoWay:!0,type:Object,noBind:!0},zoom:{required:!1,twoWay:!0,type:Number,noBind:!0},heading:{type:Number,twoWay:!0},mapTypeId:{twoWay:!0,type:String},tilt:{twoWay:!0,type:Number},options:{type:Object,default(){return{}}}},V=["bounds_changed","click","dblclick","drag","dragend","dragstart","idle","mousemove","mouseout","mouseover","resize","rightclick","tilesloaded"],He=["panBy","panTo","panToBounds","fitBounds"].reduce((s,t)=>(s[t]=function(){this.$mapObject&&this.$mapObject[t].apply(this.$mapObject,arguments)},s),{}),Ge={resize(){this.$mapObject&&google.maps.event.trigger(this.$mapObject,"resize")},resizePreserveCenter(){if(!this.$mapObject)return;const s=this.$mapObject.getCenter();google.maps.event.trigger(this.$mapObject,"resize"),this.$mapObject.setCenter(s)},_resizeCallback(){this.resizePreserveCenter()}},Fe={mixins:[Ne],props:I(c(c({},x),V.reduce((s,t)=>C(c({},s),{[`on${t.charAt(0).toUpperCase()}${t.slice(1)}`.replace(/[-_]+(.)?/g,(e,r)=>r?r.toUpperCase():"")]:Function}),{}))),inheritAttrs:!1,provide(){return this.$mapPromise=new Promise((s,t)=>{this.$mapPromiseDeferred={resolve:s,reject:t}}),{$mapPromise:this.$mapPromise}},emits:["center_changed","zoom_changed","bounds_changed"],computed:{finalLat(){return this.center&&typeof this.center.lat=="function"?this.center.lat():this.center.lat},finalLng(){return this.center&&typeof this.center.lng=="function"?this.center.lng():this.center.lng},finalLatLng(){return{lat:this.finalLat,lng:this.finalLng}}},watch:{zoom(s){this.$mapObject&&this.$mapObject.setZoom(s)}},mounted(){return this.$gmapApiPromiseLazy().then(()=>{const s=this.$refs["vue-map"],t=c(c({},this.options),P(this,x));return delete t.options,this.$mapObject=new google.maps.Map(s,t),A(this,this.$mapObject,x),X(this,this.$mapObject,V),De((e,r,o)=>{this.$mapObject.addListener("center_changed",()=>{o()&&this.$emit("center_changed",this.$mapObject.getCenter()),r()}),Y(this,["finalLat","finalLng"],()=>{e(),this.$mapObject.setCenter(this.finalLatLng)})}),this.$mapObject.addListener("zoom_changed",()=>{this.$emit("zoom_changed",this.$mapObject.getZoom())}),this.$mapObject.addListener("bounds_changed",()=>{this.$emit("bounds_changed",this.$mapObject.getBounds())}),this.$mapPromiseDeferred.resolve(this.$mapObject),this.$mapObject}).catch(s=>{throw s})},methods:c(c({},Ge),He)},Ue={class:"vue-map-hidden"};function qe(s,t,e,r,o,i){return $(),M("div",{class:ie(["vue-map-container",s.$attrs.class])},[D("div",{ref:"vue-map",class:"vue-map",style:re(s.$attrs.style?s.$attrs.style:"")},null,4),D("div",Ue,[v(s.$slots,"default")]),v(s.$slots,"visible")],2)}var Ve=b(Fe,[["render",qe]]);const Xe={options:{type:Object,twoWay:!1,default:()=>{}},data:{type:Array,twoWay:!0}},Ye=[];var Je=g({mappedProps:Xe,name:"heatmap",ctr:()=>google.maps.visualization.HeatmapLayer,events:Ye}),Ke=s=>{const t=s.addEventListener?s.addEventListener:s.attachEvent;function e(r,o){if(r==="keydown"){const i=o;o=function(n){const a=document.getElementsByClassName("pac-item-selected").length>0;if(n.which===13&&!a){const l=document.createEvent("Event");l.keyCode=40,l.which=40,i.apply(s,[l])}i.apply(s,[n])}}t.apply(s,[r,o])}s.addEventListener=e,s.attachEvent=e};const j={bounds:{type:Object},componentRestrictions:{type:Object,noBind:!0},types:{type:Array,default:function(){return[]}}},Qe={selectFirstOnEnter:{required:!1,type:Boolean,default:!1},options:{type:Object}},et={mounted(){this.$gmapApiPromiseLazy().then(()=>{if(this.selectFirstOnEnter&&Ke(this.$refs.input),typeof google.maps.places.Autocomplete!="function")throw new Error("google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?");const s=c(c({},P(this,j)),this.options);this.$autocomplete=new google.maps.places.Autocomplete(this.$refs.input,s),A(this,this.$autocomplete,j),this.$watch("componentRestrictions",t=>{t!==void 0&&this.$autocomplete.setComponentRestrictions(t)}),this.$autocomplete.addListener("place_changed",()=>{this.$emit("place_changed",this.$autocomplete.getPlace())})})},props:c(c({},I(j)),Qe)};function tt(s,t,e,r,o,i){return $(),M("input",oe({ref:"input"},s.$attrs,ne(s.$attrs)),null,16)}var st=b(et,[["render",tt]]);let Q=null;function rt(s,t){t=c({installComponents:!0,autobindAllEvents:!1},t),Q=H({data:function(){return{gmapApi:null}}});const e=H();let r=it(t);s.mixin({created(){this.$gmapDefaultResizeBus=e,this.$gmapOptions=t,this.$gmapApiPromiseLazy=r}}),s.$gmapDefaultResizeBus=e,s.$gmapApiPromiseLazy=r,t.installComponents&&(s.component("GMapMap",Ve),s.component("GMapMarker",Le),s.component("GMapInfoWindow",Ze),s.component("GMapCluster",Be),s.component("GMapPolyline",me),s.component("GMapPolygon",_e),s.component("GMapCircle",be),s.component("GMapRectangle",we),s.component("GMapAutocomplete",st),s.component("GMapHeatmap",Je))}function it(s){function t(){return Q.gmapApi={},window.google}if(s.load)return G(()=>E.isServer()?new Promise(()=>{}).then(t):new Promise((e,r)=>{try{window.vueGoogleMapsInit=e,ce(s.load)}catch(o){r(o)}}).then(t));{const e=new Promise(r=>{E.isServer()||(window.vueGoogleMapsInit=r)}).then(t);return G(()=>e)}}var at=ae(({app:s})=>{s.use(rt,{load:{key:"AIzaSyBT1_DmmEmmOaFRWg2LeivpEBTIPjZDwDE"}})});export{at as default};
