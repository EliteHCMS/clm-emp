import{F as Dt,h as $e,e as St,i as vt,o as Mt,a as kt,r as Q,g as He,c as q,w as Fe,b as Pt,d as wt,T as Ut,f as Wt}from"./index.522e4dc0.js";/*!
  * shared v9.2.0-beta.35
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const Vt=typeof window!="undefined",xt=typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol",j=e=>xt?Symbol(e):e,jt=(e,t,n)=>Gt({l:e,k:t,s:n}),Gt=e=>JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),D=e=>typeof e=="number"&&isFinite(e),$t=e=>Ee(e)==="[object Date]",ae=e=>Ee(e)==="[object RegExp]",re=e=>I(e)&&Object.keys(e).length===0;function Ht(e,t){typeof console!="undefined"&&(console.warn("[intlify] "+e),t&&console.warn(t.stack))}const k=Object.assign;function Ae(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const Bt=Object.prototype.hasOwnProperty;function de(e,t){return Bt.call(e,t)}const C=Array.isArray,h=e=>typeof e=="function",f=e=>typeof e=="string",p=e=>typeof e=="boolean",A=e=>e!==null&&typeof e=="object",Be=Object.prototype.toString,Ee=e=>Be.call(e),I=e=>Ee(e)==="[object Object]",Kt=e=>e==null?"":C(e)||I(e)&&e.toString===Be?JSON.stringify(e,null,2):String(e);/*!
  * message-compiler v9.2.0-beta.35
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const Ke={EXPECTED_TOKEN:1,INVALID_TOKEN_IN_PLACEHOLDER:2,UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER:3,UNKNOWN_ESCAPE_SEQUENCE:4,INVALID_UNICODE_ESCAPE_SEQUENCE:5,UNBALANCED_CLOSING_BRACE:6,UNTERMINATED_CLOSING_BRACE:7,EMPTY_PLACEHOLDER:8,NOT_ALLOW_NEST_PLACEHOLDER:9,INVALID_LINKED_FORMAT:10,MUST_HAVE_MESSAGES_IN_PLURAL:11,UNEXPECTED_EMPTY_LINKED_MODIFIER:12,UNEXPECTED_EMPTY_LINKED_KEY:13,UNEXPECTED_LEXICAL_ANALYSIS:14,__EXTEND_POINT__:15};function Xe(e,t,n={}){const{domain:a,messages:r,args:l}=n,s=e,i=new SyntaxError(String(s));return i.code=e,t&&(i.location=t),i.domain=a,i}/*!
  * devtools-if v9.2.0-beta.35
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const Xt={I18nInit:"i18n:init",FunctionTranslate:"function:translate"};/*!
  * core-base v9.2.0-beta.35
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const G=[];G[0]={w:[0],i:[3,0],["["]:[4],o:[7]};G[1]={w:[1],["."]:[2],["["]:[4],o:[7]};G[2]={w:[2],i:[3,0],["0"]:[3,0]};G[3]={i:[3,0],["0"]:[3,0],w:[1,1],["."]:[2,1],["["]:[4,1],o:[7,1]};G[4]={["'"]:[5,0],['"']:[6,0],["["]:[4,2],["]"]:[1,3],o:8,l:[4,0]};G[5]={["'"]:[4,0],o:8,l:[5,0]};G[6]={['"']:[4,0],o:8,l:[6,0]};const Yt=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function Jt(e){return Yt.test(e)}function zt(e){const t=e.charCodeAt(0),n=e.charCodeAt(e.length-1);return t===n&&(t===34||t===39)?e.slice(1,-1):e}function Qt(e){if(e==null)return"o";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"i";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"w"}return"i"}function qt(e){const t=e.trim();return e.charAt(0)==="0"&&isNaN(parseInt(e))?!1:Jt(t)?zt(t):"*"+t}function Zt(e){const t=[];let n=-1,a=0,r=0,l,s,i,c,m,d,E;const _=[];_[0]=()=>{s===void 0?s=i:s+=i},_[1]=()=>{s!==void 0&&(t.push(s),s=void 0)},_[2]=()=>{_[0](),r++},_[3]=()=>{if(r>0)r--,a=4,_[0]();else{if(r=0,s===void 0||(s=qt(s),s===!1))return!1;_[1]()}};function b(){const T=e[n+1];if(a===5&&T==="'"||a===6&&T==='"')return n++,i="\\"+T,_[0](),!0}for(;a!==null;)if(n++,l=e[n],!(l==="\\"&&b())){if(c=Qt(l),E=G[a],m=E[c]||E.l||8,m===8||(a=m[0],m[1]!==void 0&&(d=_[m[1]],d&&(i=l,d()===!1))))return;if(a===7)return t}}const pe=new Map;function en(e,t){return A(e)?e[t]:null}function tn(e,t){if(!A(e))return null;let n=pe.get(t);if(n||(n=Zt(t),n&&pe.set(t,n)),!n)return null;const a=n.length;let r=e,l=0;for(;l<a;){const s=r[n[l]];if(s===void 0)return null;r=s,l++}return r}const nn=e=>e,an=e=>"",rn="text",ln=e=>e.length===0?"":e.join(""),sn=Kt;function Ce(e,t){return e=Math.abs(e),t===2?e?e>1?1:0:1:e?Math.min(e,2):0}function on(e){const t=D(e.pluralIndex)?e.pluralIndex:-1;return e.named&&(D(e.named.count)||D(e.named.n))?D(e.named.count)?e.named.count:D(e.named.n)?e.named.n:t:t}function cn(e,t){t.count||(t.count=e),t.n||(t.n=e)}function un(e={}){const t=e.locale,n=on(e),a=A(e.pluralRules)&&f(t)&&h(e.pluralRules[t])?e.pluralRules[t]:Ce,r=A(e.pluralRules)&&f(t)&&h(e.pluralRules[t])?Ce:void 0,l=N=>N[a(n,N.length,r)],s=e.list||[],i=N=>s[N],c=e.named||{};D(e.pluralIndex)&&cn(n,c);const m=N=>c[N];function d(N){const y=h(e.messages)?e.messages(N):A(e.messages)?e.messages[N]:!1;return y||(e.parent?e.parent.message(N):an)}const E=N=>e.modifiers?e.modifiers[N]:nn,_=I(e.processor)&&h(e.processor.normalize)?e.processor.normalize:ln,b=I(e.processor)&&h(e.processor.interpolate)?e.processor.interpolate:sn,T=(N,y)=>{const P=d(N)(F);return f(y)?E(y)(P):P},L=I(e.processor)&&f(e.processor.type)?e.processor.type:rn,F={list:i,named:m,plural:l,linked:T,message:d,type:L,interpolate:b,normalize:_};return F}let mn=null;Xt.FunctionTranslate;function fn(e){return t=>mn}const _n={NOT_FOUND_KEY:1,FALLBACK_TO_TRANSLATE:2,CANNOT_FORMAT_NUMBER:3,FALLBACK_TO_NUMBER_FORMAT:4,CANNOT_FORMAT_DATE:5,FALLBACK_TO_DATE_FORMAT:6,__EXTEND_POINT__:7};function gn(e,t,n){return[...new Set([n,...C(t)?t:A(t)?Object.keys(t):f(t)?[t]:[n]])]}function Ye(e,t,n){const a=f(n)?n:be,r=e;r.__localeChainCache||(r.__localeChainCache=new Map);let l=r.__localeChainCache.get(a);if(!l){l=[];let s=[n];for(;C(s);)s=Re(l,s,t);const i=C(t)||!I(t)?t:t.default?t.default:null;s=f(i)?[i]:i,C(s)&&Re(l,s,!1),r.__localeChainCache.set(a,l)}return l}function Re(e,t,n){let a=!0;for(let r=0;r<t.length&&p(a);r++){const l=t[r];f(l)&&(a=dn(e,t[r],n))}return a}function dn(e,t,n){let a;const r=t.split("-");do{const l=r.join("-");a=En(e,l,n),r.splice(-1,1)}while(r.length&&a===!0);return a}function En(e,t,n){let a=!1;if(!e.includes(t)&&(a=!0,t)){a=t[t.length-1]!=="!";const r=t.replace(/!/g,"");e.push(r),(C(n)||I(n))&&n[r]&&(a=n[r])}return a}const bn="9.2.0-beta.35",le=-1,be="en-US",he="";function Nn(){return{upper:e=>f(e)?e.toUpperCase():e,lower:e=>f(e)?e.toLowerCase():e,capitalize:e=>f(e)?`${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`:e}}let Tn,Je;function In(e){Je=e}let ze;function Ln(e){ze=e}let De=0;function On(e={}){const t=f(e.version)?e.version:bn,n=f(e.locale)?e.locale:be,a=C(e.fallbackLocale)||I(e.fallbackLocale)||f(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:n,r=I(e.messages)?e.messages:{[n]:{}},l=I(e.datetimeFormats)?e.datetimeFormats:{[n]:{}},s=I(e.numberFormats)?e.numberFormats:{[n]:{}},i=k({},e.modifiers||{},Nn()),c=e.pluralRules||{},m=h(e.missing)?e.missing:null,d=p(e.missingWarn)||ae(e.missingWarn)?e.missingWarn:!0,E=p(e.fallbackWarn)||ae(e.fallbackWarn)?e.fallbackWarn:!0,_=!!e.fallbackFormat,b=!!e.unresolving,T=h(e.postTranslation)?e.postTranslation:null,L=I(e.processor)?e.processor:null,F=p(e.warnHtmlMessage)?e.warnHtmlMessage:!0,N=!!e.escapeParameter,y=h(e.messageCompiler)?e.messageCompiler:Tn,P=h(e.messageResolver)?e.messageResolver:Je||en,O=h(e.localeFallbacker)?e.localeFallbacker:ze||gn,g=A(e.fallbackContext)?e.fallbackContext:void 0,v=h(e.onWarn)?e.onWarn:Ht,W=e,X=A(W.__datetimeFormatters)?W.__datetimeFormatters:new Map,Y=A(W.__numberFormatters)?W.__numberFormatters:new Map,J=A(W.__meta)?W.__meta:{};De++;const V={version:t,cid:De,locale:n,fallbackLocale:a,messages:r,modifiers:i,pluralRules:c,missing:m,missingWarn:d,fallbackWarn:E,fallbackFormat:_,unresolving:b,postTranslation:T,processor:L,warnHtmlMessage:F,escapeParameter:N,messageCompiler:y,messageResolver:P,localeFallbacker:O,fallbackContext:g,onWarn:v,__meta:J};return V.datetimeFormats=l,V.numberFormats=s,V.__datetimeFormatters=X,V.__numberFormatters=Y,V}function Ne(e,t,n,a,r){const{missing:l,onWarn:s}=e;if(l!==null){const i=l(e,n,t,r);return f(i)?i:t}else return t}function Z(e,t,n){const a=e;a.__localeChainCache=new Map,e.localeFallbacker(e,n,t)}let Qe=Ke.__EXTEND_POINT__;const oe=()=>++Qe,B={INVALID_ARGUMENT:Qe,INVALID_DATE_ARGUMENT:oe(),INVALID_ISO_DATE_ARGUMENT:oe(),__EXTEND_POINT__:oe()};function K(e){return Xe(e,null,void 0)}const Se=()=>"",$=e=>h(e);function ve(e,...t){const{fallbackFormat:n,postTranslation:a,unresolving:r,messageCompiler:l,fallbackLocale:s,messages:i}=e,[c,m]=ce(...t),d=p(m.missingWarn)?m.missingWarn:e.missingWarn,E=p(m.fallbackWarn)?m.fallbackWarn:e.fallbackWarn,_=p(m.escapeParameter)?m.escapeParameter:e.escapeParameter,b=!!m.resolvedMessage,T=f(m.default)||p(m.default)?p(m.default)?l?c:()=>c:m.default:n?l?c:()=>c:"",L=n||T!=="",F=f(m.locale)?m.locale:e.locale;_&&yn(m);let[N,y,P]=b?[c,F,i[F]||{}]:qe(e,c,F,s,E,d),O=N,g=c;if(!b&&!(f(O)||$(O))&&L&&(O=T,g=O),!b&&(!(f(O)||$(O))||!f(y)))return r?le:c;let v=!1;const W=()=>{v=!0},X=$(O)?O:Ze(e,c,y,O,g,W);if(v)return O;const Y=pn(e,y,P,m),J=un(Y),V=Fn(e,X,J);return a?a(V):V}function yn(e){C(e.list)?e.list=e.list.map(t=>f(t)?Ae(t):t):A(e.named)&&Object.keys(e.named).forEach(t=>{f(e.named[t])&&(e.named[t]=Ae(e.named[t]))})}function qe(e,t,n,a,r,l){const{messages:s,onWarn:i,messageResolver:c,localeFallbacker:m}=e,d=m(e,a,n);let E={},_,b=null;const T="translate";for(let L=0;L<d.length&&(_=d[L],E=s[_]||{},(b=c(E,t))===null&&(b=E[t]),!(f(b)||h(b)));L++){const F=Ne(e,t,_,l,T);F!==t&&(b=F)}return[b,_,E]}function Ze(e,t,n,a,r,l){const{messageCompiler:s,warnHtmlMessage:i}=e;if($(a)){const m=a;return m.locale=m.locale||n,m.key=m.key||t,m}if(s==null){const m=()=>a;return m.locale=n,m.key=t,m}const c=s(a,An(e,n,r,a,i,l));return c.locale=n,c.key=t,c.source=a,c}function Fn(e,t,n){return t(n)}function ce(...e){const[t,n,a]=e,r={};if(!f(t)&&!D(t)&&!$(t))throw K(B.INVALID_ARGUMENT);const l=D(t)?String(t):($(t),t);return D(n)?r.plural=n:f(n)?r.default=n:I(n)&&!re(n)?r.named=n:C(n)&&(r.list=n),D(a)?r.plural=a:f(a)?r.default=a:I(a)&&k(r,a),[l,r]}function An(e,t,n,a,r,l){return{warnHtmlMessage:r,onError:s=>{throw l&&l(s),s},onCacheKey:s=>jt(t,n,s)}}function pn(e,t,n,a){const{modifiers:r,pluralRules:l,messageResolver:s,fallbackLocale:i,fallbackWarn:c,missingWarn:m,fallbackContext:d}=e,_={locale:t,modifiers:r,pluralRules:l,messages:b=>{let T=s(n,b);if(T==null&&d){const[,,L]=qe(d,b,t,i,c,m);T=s(L,b)}if(f(T)){let L=!1;const N=Ze(e,b,t,T,b,()=>{L=!0});return L?Se:N}else return $(T)?T:Se}};return e.processor&&(_.processor=e.processor),a.list&&(_.list=a.list),a.named&&(_.named=a.named),D(a.plural)&&(_.pluralIndex=a.plural),_}function Me(e,...t){const{datetimeFormats:n,unresolving:a,fallbackLocale:r,onWarn:l,localeFallbacker:s}=e,{__datetimeFormatters:i}=e,[c,m,d,E]=ie(...t),_=p(d.missingWarn)?d.missingWarn:e.missingWarn;p(d.fallbackWarn)?d.fallbackWarn:e.fallbackWarn;const b=!!d.part,T=f(d.locale)?d.locale:e.locale,L=s(e,r,T);if(!f(c)||c==="")return new Intl.DateTimeFormat(T).format(m);let F={},N,y=null;const P="datetime format";for(let v=0;v<L.length&&(N=L[v],F=n[N]||{},y=F[c],!I(y));v++)Ne(e,c,N,_,P);if(!I(y)||!f(N))return a?le:c;let O=`${N}__${c}`;re(E)||(O=`${O}__${JSON.stringify(E)}`);let g=i.get(O);return g||(g=new Intl.DateTimeFormat(N,k({},y,E)),i.set(O,g)),b?g.formatToParts(m):g.format(m)}function ie(...e){const[t,n,a,r]=e;let l={},s={},i;if(f(t)){const c=t.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);if(!c)throw K(B.INVALID_ISO_DATE_ARGUMENT);const m=c[3]?c[3].trim().startsWith("T")?`${c[1].trim()}${c[3].trim()}`:`${c[1].trim()}T${c[3].trim()}`:c[1].trim();i=new Date(m);try{i.toISOString()}catch{throw K(B.INVALID_ISO_DATE_ARGUMENT)}}else if($t(t)){if(isNaN(t.getTime()))throw K(B.INVALID_DATE_ARGUMENT);i=t}else if(D(t))i=t;else throw K(B.INVALID_ARGUMENT);return f(n)?l.key=n:I(n)&&(l=n),f(a)?l.locale=a:I(a)&&(s=a),I(r)&&(s=r),[l.key||"",i,l,s]}function ke(e,t,n){const a=e;for(const r in n){const l=`${t}__${r}`;!a.__datetimeFormatters.has(l)||a.__datetimeFormatters.delete(l)}}function Pe(e,...t){const{numberFormats:n,unresolving:a,fallbackLocale:r,onWarn:l,localeFallbacker:s}=e,{__numberFormatters:i}=e,[c,m,d,E]=ue(...t),_=p(d.missingWarn)?d.missingWarn:e.missingWarn;p(d.fallbackWarn)?d.fallbackWarn:e.fallbackWarn;const b=!!d.part,T=f(d.locale)?d.locale:e.locale,L=s(e,r,T);if(!f(c)||c==="")return new Intl.NumberFormat(T).format(m);let F={},N,y=null;const P="number format";for(let v=0;v<L.length&&(N=L[v],F=n[N]||{},y=F[c],!I(y));v++)Ne(e,c,N,_,P);if(!I(y)||!f(N))return a?le:c;let O=`${N}__${c}`;re(E)||(O=`${O}__${JSON.stringify(E)}`);let g=i.get(O);return g||(g=new Intl.NumberFormat(N,k({},y,E)),i.set(O,g)),b?g.formatToParts(m):g.format(m)}function ue(...e){const[t,n,a,r]=e;let l={},s={};if(!D(t))throw K(B.INVALID_ARGUMENT);const i=t;return f(n)?l.key=n:I(n)&&(l=n),f(a)?l.locale=a:I(a)&&(s=a),I(r)&&(s=r),[l.key||"",i,l,s]}function we(e,t,n){const a=e;for(const r in n){const l=`${t}__${r}`;!a.__numberFormatters.has(l)||a.__numberFormatters.delete(l)}}/*!
  * vue-i18n v9.2.0-beta.35
  * (c) 2022 kazuya kawaguchi
  * Released under the MIT License.
  */const Cn="9.2.0-beta.35";_n.__EXTEND_POINT__;let et=Ke.__EXTEND_POINT__;const M=()=>++et,w={UNEXPECTED_RETURN_TYPE:et,INVALID_ARGUMENT:M(),MUST_BE_CALL_SETUP_TOP:M(),NOT_INSLALLED:M(),NOT_AVAILABLE_IN_LEGACY_MODE:M(),REQUIRED_VALUE:M(),INVALID_VALUE:M(),CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN:M(),NOT_INSLALLED_WITH_PROVIDE:M(),UNEXPECTED_ERROR:M(),NOT_COMPATIBLE_LEGACY_VUE_I18N:M(),BRIDGE_SUPPORT_VUE_2_ONLY:M(),MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION:M(),NOT_AVAILABLE_COMPOSITION_IN_LEGACY:M(),__EXTEND_POINT__:M()};function U(e,...t){return Xe(e,null,void 0)}const me=j("__transrateVNode"),fe=j("__datetimeParts"),_e=j("__numberParts"),Rn=j("__setPluralRules");j("__intlifyMeta");const hn=j("__injectWithOption");function ge(e){if(!A(e))return e;for(const t in e)if(!!de(e,t))if(!t.includes("."))A(e[t])&&ge(e[t]);else{const n=t.split("."),a=n.length-1;let r=e;for(let l=0;l<a;l++)n[l]in r||(r[n[l]]={}),r=r[n[l]];r[n[a]]=e[t],delete e[t],A(r[n[a]])&&ge(r[n[a]])}return e}function tt(e,t){const{messages:n,__i18n:a,messageResolver:r,flatJson:l}=t,s=I(n)?n:C(a)?{}:{[e]:{}};if(C(a)&&a.forEach(i=>{if("locale"in i&&"resource"in i){const{locale:c,resource:m}=i;c?(s[c]=s[c]||{},ee(m,s[c])):ee(m,s)}else f(i)&&ee(JSON.parse(i),s)}),r==null&&l)for(const i in s)de(s,i)&&ge(s[i]);return s}const ne=e=>!A(e)||C(e);function ee(e,t){if(ne(e)||ne(t))throw U(w.INVALID_VALUE);for(const n in e)de(e,n)&&(ne(e[n])||ne(t[n])?t[n]=e[n]:ee(e[n],t[n]))}function Dn(e){return e.type}function Sn(e,t,n){let a=A(t.messages)?t.messages:{};"__i18nGlobal"in n&&(a=tt(e.locale.value,{messages:a,__i18n:n.__i18nGlobal}));const r=Object.keys(a);r.length&&r.forEach(l=>{e.mergeLocaleMessage(l,a[l])});{if(A(t.datetimeFormats)){const l=Object.keys(t.datetimeFormats);l.length&&l.forEach(s=>{e.mergeDateTimeFormat(s,t.datetimeFormats[s])})}if(A(t.numberFormats)){const l=Object.keys(t.numberFormats);l.length&&l.forEach(s=>{e.mergeNumberFormat(s,t.numberFormats[s])})}}}function Ue(e){return wt(Ut,null,e,0)}let We=0;function Ve(e){return(t,n,a,r)=>e(n,a,He()||void 0,r)}function nt(e={},t){const{__root:n}=e,a=n===void 0;let r=p(e.inheritLocale)?e.inheritLocale:!0;const l=Q(n&&r?n.locale.value:f(e.locale)?e.locale:be),s=Q(n&&r?n.fallbackLocale.value:f(e.fallbackLocale)||C(e.fallbackLocale)||I(e.fallbackLocale)||e.fallbackLocale===!1?e.fallbackLocale:l.value),i=Q(tt(l.value,e)),c=Q(I(e.datetimeFormats)?e.datetimeFormats:{[l.value]:{}}),m=Q(I(e.numberFormats)?e.numberFormats:{[l.value]:{}});let d=n?n.missingWarn:p(e.missingWarn)||ae(e.missingWarn)?e.missingWarn:!0,E=n?n.fallbackWarn:p(e.fallbackWarn)||ae(e.fallbackWarn)?e.fallbackWarn:!0,_=n?n.fallbackRoot:p(e.fallbackRoot)?e.fallbackRoot:!0,b=!!e.fallbackFormat,T=h(e.missing)?e.missing:null,L=h(e.missing)?Ve(e.missing):null,F=h(e.postTranslation)?e.postTranslation:null,N=n?n.warnHtmlMessage:p(e.warnHtmlMessage)?e.warnHtmlMessage:!0,y=!!e.escapeParameter;const P=n?n.modifiers:I(e.modifiers)?e.modifiers:{};let O=e.pluralRules||n&&n.pluralRules,g;function v(){const o={version:Cn,locale:l.value,fallbackLocale:s.value,messages:i.value,modifiers:P,pluralRules:O,missing:L===null?void 0:L,missingWarn:d,fallbackWarn:E,fallbackFormat:b,unresolving:!0,postTranslation:F===null?void 0:F,warnHtmlMessage:N,escapeParameter:y,messageResolver:e.messageResolver,__meta:{framework:"vue"}};return o.datetimeFormats=c.value,o.numberFormats=m.value,o.__datetimeFormatters=I(g)?g.__datetimeFormatters:void 0,o.__numberFormatters=I(g)?g.__numberFormatters:void 0,On(o)}g=v(),Z(g,l.value,s.value);function W(){return[l.value,s.value,i.value,c.value,m.value]}const X=q({get:()=>l.value,set:o=>{l.value=o,g.locale=l.value}}),Y=q({get:()=>s.value,set:o=>{s.value=o,g.fallbackLocale=s.value,Z(g,l.value,o)}}),J=q(()=>i.value),V=q(()=>c.value),Le=q(()=>m.value);function lt(){return h(F)?F:null}function st(o){F=o,g.postTranslation=o}function ot(){return T}function ct(o){o!==null&&(L=Ve(o)),T=o,g.missing=L}function H(o,u,x,S,se,te){W();let z;if(z=o(g),D(z)&&z===le){const[ht,ta]=u();return n&&_?S(n):se(ht)}else{if(te(z))return z;throw U(w.UNEXPECTED_RETURN_TYPE)}}function Oe(...o){return H(u=>Reflect.apply(ve,null,[u,...o]),()=>ce(...o),"translate",u=>Reflect.apply(u.t,u,[...o]),u=>u,u=>f(u))}function it(...o){const[u,x,S]=o;if(S&&!A(S))throw U(w.INVALID_ARGUMENT);return Oe(u,x,k({resolvedMessage:!0},S||{}))}function ut(...o){return H(u=>Reflect.apply(Me,null,[u,...o]),()=>ie(...o),"datetime format",u=>Reflect.apply(u.d,u,[...o]),()=>he,u=>f(u))}function mt(...o){return H(u=>Reflect.apply(Pe,null,[u,...o]),()=>ue(...o),"number format",u=>Reflect.apply(u.n,u,[...o]),()=>he,u=>f(u))}function ft(o){return o.map(u=>f(u)?Ue(u):u)}const _t={normalize:ft,interpolate:o=>o,type:"vnode"};function gt(...o){return H(u=>{let x;const S=u;try{S.processor=_t,x=Reflect.apply(ve,null,[S,...o])}finally{S.processor=null}return x},()=>ce(...o),"translate",u=>u[me](...o),u=>[Ue(u)],u=>C(u))}function dt(...o){return H(u=>Reflect.apply(Pe,null,[u,...o]),()=>ue(...o),"number format",u=>u[_e](...o),()=>[],u=>f(u)||C(u))}function Et(...o){return H(u=>Reflect.apply(Me,null,[u,...o]),()=>ie(...o),"datetime format",u=>u[fe](...o),()=>[],u=>f(u)||C(u))}function bt(o){O=o,g.pluralRules=O}function Nt(o,u){const x=f(u)?u:l.value,S=ye(x);return g.messageResolver(S,o)!==null}function Tt(o){let u=null;const x=Ye(g,s.value,l.value);for(let S=0;S<x.length;S++){const se=i.value[x[S]]||{},te=g.messageResolver(se,o);if(te!=null){u=te;break}}return u}function It(o){const u=Tt(o);return u!=null?u:n?n.tm(o)||{}:{}}function ye(o){return i.value[o]||{}}function Lt(o,u){i.value[o]=u,g.messages=i.value}function Ot(o,u){i.value[o]=i.value[o]||{},ee(u,i.value[o]),g.messages=i.value}function yt(o){return c.value[o]||{}}function Ft(o,u){c.value[o]=u,g.datetimeFormats=c.value,ke(g,o,u)}function At(o,u){c.value[o]=k(c.value[o]||{},u),g.datetimeFormats=c.value,ke(g,o,u)}function pt(o){return m.value[o]||{}}function Ct(o,u){m.value[o]=u,g.numberFormats=m.value,we(g,o,u)}function Rt(o,u){m.value[o]=k(m.value[o]||{},u),g.numberFormats=m.value,we(g,o,u)}We++,n&&Vt&&(Fe(n.locale,o=>{r&&(l.value=o,g.locale=o,Z(g,l.value,s.value))}),Fe(n.fallbackLocale,o=>{r&&(s.value=o,g.fallbackLocale=o,Z(g,l.value,s.value))}));const R={id:We,locale:X,fallbackLocale:Y,get inheritLocale(){return r},set inheritLocale(o){r=o,o&&n&&(l.value=n.locale.value,s.value=n.fallbackLocale.value,Z(g,l.value,s.value))},get availableLocales(){return Object.keys(i.value).sort()},messages:J,get modifiers(){return P},get pluralRules(){return O||{}},get isGlobal(){return a},get missingWarn(){return d},set missingWarn(o){d=o,g.missingWarn=d},get fallbackWarn(){return E},set fallbackWarn(o){E=o,g.fallbackWarn=E},get fallbackRoot(){return _},set fallbackRoot(o){_=o},get fallbackFormat(){return b},set fallbackFormat(o){b=o,g.fallbackFormat=b},get warnHtmlMessage(){return N},set warnHtmlMessage(o){N=o,g.warnHtmlMessage=o},get escapeParameter(){return y},set escapeParameter(o){y=o,g.escapeParameter=o},t:Oe,getLocaleMessage:ye,setLocaleMessage:Lt,mergeLocaleMessage:Ot,getPostTranslationHandler:lt,setPostTranslationHandler:st,getMissingHandler:ot,setMissingHandler:ct,[Rn]:bt};return R.datetimeFormats=V,R.numberFormats=Le,R.rt=it,R.te=Nt,R.tm=It,R.d=ut,R.n=mt,R.getDateTimeFormat=yt,R.setDateTimeFormat=Ft,R.mergeDateTimeFormat=At,R.getNumberFormat=pt,R.setNumberFormat=Ct,R.mergeNumberFormat=Rt,R[hn]=e.__injectWithOption,R[me]=gt,R[fe]=Et,R[_e]=dt,R}const Te={tag:{type:[String,Object]},locale:{type:String},scope:{type:String,validator:e=>e==="parent"||e==="global",default:"parent"},i18n:{type:Object}};function vn({slots:e},t){return t.length===1&&t[0]==="default"?(e.default?e.default():[]).reduce((a,r)=>a=[...a,...C(r.children)?r.children:[r]],[]):t.reduce((n,a)=>{const r=e[a];return r&&(n[a]=r()),n},{})}function at(e){return Dt}const xe={name:"i18n-t",props:k({keypath:{type:String,required:!0},plural:{type:[Number,String],validator:e=>D(e)||!isNaN(e)}},Te),setup(e,t){const{slots:n,attrs:a}=t,r=e.i18n||Ie({useScope:e.scope,__useComponent:!0}),l=Object.keys(n).filter(s=>s!=="_");return()=>{const s={};e.locale&&(s.locale=e.locale),e.plural!==void 0&&(s.plural=f(e.plural)?+e.plural:e.plural);const i=vn(t,l),c=r[me](e.keypath,i,s),m=k({},a),d=f(e.tag)||A(e.tag)?e.tag:at();return $e(d,m,c)}}};function Mn(e){return C(e)&&!f(e[0])}function rt(e,t,n,a){const{slots:r,attrs:l}=t;return()=>{const s={part:!0};let i={};e.locale&&(s.locale=e.locale),f(e.format)?s.key=e.format:A(e.format)&&(f(e.format.key)&&(s.key=e.format.key),i=Object.keys(e.format).reduce((_,b)=>n.includes(b)?k({},_,{[b]:e.format[b]}):_,{}));const c=a(e.value,s,i);let m=[s.key];C(c)?m=c.map((_,b)=>{const T=r[_.type],L=T?T({[_.type]:_.value,index:b,parts:c}):[_.value];return Mn(L)&&(L[0].key=`${_.type}-${b}`),L}):f(c)&&(m=[c]);const d=k({},l),E=f(e.tag)||A(e.tag)?e.tag:at();return $e(E,d,m)}}const kn=["localeMatcher","style","unit","unitDisplay","currency","currencyDisplay","useGrouping","numberingSystem","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","notation","formatMatcher"],je={name:"i18n-n",props:k({value:{type:Number,required:!0},format:{type:[String,Object]}},Te),setup(e,t){const n=e.i18n||Ie({useScope:"parent",__useComponent:!0});return rt(e,t,kn,(...a)=>n[_e](...a))}},Pn=["dateStyle","timeStyle","fractionalSecondDigits","calendar","dayPeriod","numberingSystem","localeMatcher","timeZone","hour12","hourCycle","formatMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName"],Ge={name:"i18n-d",props:k({value:{type:[Number,Date],required:!0},format:{type:[String,Object]}},Te),setup(e,t){const n=e.i18n||Ie({useScope:"parent",__useComponent:!0});return rt(e,t,Pn,(...a)=>n[fe](...a))}};function wn(e,t){const n=e;if(e.mode==="composition")return n.__getInstance(t)||e.global;{const a=n.__getInstance(t);return a!=null?a.__composer:e.global.__composer}}function Un(e){const t=(n,{instance:a,value:r,modifiers:l})=>{if(!a||!a.$)throw U(w.UNEXPECTED_ERROR);const s=wn(e,a.$),i=Wn(r);n.textContent=Reflect.apply(s.t,s,[...Vn(i)])};return{beforeMount:t,beforeUpdate:t}}function Wn(e){if(f(e))return{path:e};if(I(e)){if(!("path"in e))throw U(w.REQUIRED_VALUE,"path");return e}else throw U(w.INVALID_VALUE)}function Vn(e){const{path:t,locale:n,args:a,choice:r,plural:l}=e,s={},i=a||{};return f(n)&&(s.locale=n),D(r)&&(s.plural=r),D(l)&&(s.plural=l),[t,i,s]}function xn(e,t,...n){const a=I(n[0])?n[0]:{},r=!!a.useI18nComponentName;(p(a.globalInstall)?a.globalInstall:!0)&&(e.component(r?"i18n":xe.name,xe),e.component(je.name,je),e.component(Ge.name,Ge)),e.directive("t",Un(t))}const jn=j("global-vue-i18n");function Gn(e={},t){const n=p(e.globalInjection)?e.globalInjection:!0,a=!0,r=new Map,[l,s]=$n(e),i=j("");function c(E){return r.get(E)||null}function m(E,_){r.set(E,_)}function d(E){r.delete(E)}{const E={get mode(){return"composition"},get allowComposition(){return a},async install(_,...b){_.__VUE_I18N_SYMBOL__=i,_.provide(_.__VUE_I18N_SYMBOL__,E),n&&Qn(_,E.global),xn(_,E,...b);const T=_.unmount;_.unmount=()=>{E.dispose(),T()}},get global(){return s},dispose(){l.stop()},__instances:r,__getInstance:c,__setInstance:m,__deleteInstance:d};return E}}function Ie(e={}){const t=He();if(t==null)throw U(w.MUST_BE_CALL_SETUP_TOP);if(!t.isCE&&t.appContext.app!=null&&!t.appContext.app.__VUE_I18N_SYMBOL__)throw U(w.NOT_INSLALLED);const n=Hn(t),a=Kn(n),r=Dn(t),l=Bn(e,r);if(l==="global")return Sn(a,e,r),a;if(l==="parent"){let c=Xn(n,t,e.__useComponent);return c==null&&(c=a),c}const s=n;let i=s.__getInstance(t);if(i==null){const c=k({},e);"__i18n"in r&&(c.__i18n=r.__i18n),a&&(c.__root=a),i=nt(c),Yn(s,t),s.__setInstance(t,i)}return i}function $n(e,t,n){const a=St();{const r=a.run(()=>nt(e));if(r==null)throw U(w.UNEXPECTED_ERROR);return[a,r]}}function Hn(e){{const t=vt(e.isCE?jn:e.appContext.app.__VUE_I18N_SYMBOL__);if(!t)throw U(e.isCE?w.NOT_INSLALLED_WITH_PROVIDE:w.UNEXPECTED_ERROR);return t}}function Bn(e,t){return re(e)?"__i18n"in t?"local":"global":e.useScope?e.useScope:"local"}function Kn(e){return e.mode==="composition"?e.global:e.global.__composer}function Xn(e,t,n=!1){let a=null;const r=t.root;let l=t.parent;for(;l!=null;){const s=e;if(e.mode==="composition"&&(a=s.__getInstance(l)),a!=null||r===l)break;l=l.parent}return a}function Yn(e,t,n){Mt(()=>{},t),kt(()=>{e.__deleteInstance(t)},t)}const Jn=["locale","fallbackLocale","availableLocales"],zn=["t","rt","d","n","tm"];function Qn(e,t){const n=Object.create(null);Jn.forEach(a=>{const r=Object.getOwnPropertyDescriptor(t,a);if(!r)throw U(w.UNEXPECTED_ERROR);const l=Pt(r.value)?{get(){return r.value.value},set(s){r.value.value=s}}:{get(){return r.get&&r.get()}};Object.defineProperty(n,a,l)}),e.config.globalProperties.$i18n=n,zn.forEach(a=>{const r=Object.getOwnPropertyDescriptor(t,a);if(!r||!r.value)throw U(w.UNEXPECTED_ERROR);Object.defineProperty(e.config.globalProperties,`$${a}`,r)})}In(tn);Ln(Ye);var qn={appName:"Craft Labor Management Suite",appShortName:"CLM",failed:"Action failed",success:"Action was successful",toolbarTitle:"Talent Elevated"},Zn={"en-US":qn},aa=Wt(({app:e})=>{const t=Gn({locale:"en-US",messages:Zn,globalInjection:!0});e.use(t)});export{aa as default};
