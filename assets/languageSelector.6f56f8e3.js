var _=Object.defineProperty;var r=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var c=(o,t,a)=>t in o?_(o,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[t]=a,i=(o,t)=>{for(var a in t||(t={}))b.call(t,a)&&c(o,a,t[a]);if(r)for(var a of r(t))g.call(t,a)&&c(o,a,t[a]);return o};import{a as y}from"./QSelect.127f4ac6.js";import{u as L}from"./use-quasar.56147a62.js";import{u as U,l as k}from"./i18n.a8b0edb4.js";import{q as n}from"./quickbase.0e5ca545.js";import{v as q,ae as w,C as S,b2 as p,b as V}from"./index.172e2525.js";const C={__name:"languageSelector",setup(o){const t=L(),{locale:a,availableLocales:m}=U(),f=m.map(e=>({label:k[`${e}`].nativeName,value:e})),u=async e=>{const s=n.getOfficeLocation(),l=i({339:{value:e}},s&&{16:{value:s.rid}});return await n.updateEmployeeData({fields:l})},d=async e=>{const s={26:{value:"now"},100:{value:e}};return await n.updateUserData({fields:s})},v=e=>{t.lang.set(e),d(e),e==="en-US"?u(1):e==="es"&&u(2)};return(e,s)=>(q(),w(y,S({modelValue:p(a),"onUpdate:modelValue":[s[0]||(s[0]=l=>V(a)?a.value=l:null),v],options:p(f)},e.$attrs,{"emit-value":"","map-options":""}),null,16,["modelValue","options"]))}};export{C as _};
